
stages:
  - test
  - deploy


variables:
  NODE_ENV: "test"

 
test_job:
   stage: test
   image: node:14
   before_script:
     - apt-get update && apt-get install -y build-essential
     - npm install
   script:
     - npm install jest @babel/core @babel/preset-env babel-jest --save-dev
     - npm run test:coverage
   artifacts:
     paths:
       - coverage/
     expire_in: 1 week

deploy_job:
  stage: deploy
  image: ubuntu:latest  
  before_script:
  - eval $(ssh-agent -s)  
  - apt-get -yq update 
  - apt-get -yqq install ssh  
  - mkdir -p ~/.ssh  
  - chmod 700 ~/.ssh  
  - echo "$SSH_PRIVATE_KEY" | base64 --decode > ~/.ssh/id_rsa  
  - chmod 600 ~/.ssh/id_rsa  # Asegura que la clave tenga los permisos correctos
  - ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts  # Agrega el host a `known_hosts`

  script:
    - ssh ubuntu@$SSH_HOST "echo 'Conectado!'"  
    - ssh ubuntu@$SSH_HOST "mkdir -p /home/ubuntu/unit-testing-fizzbuzz"  
    - scp -r . ubuntu@$SSH_HOST:/home/ubuntu/unit-testing-fizzbuzz  
    - ssh ubuntu@$SSH_HOST "cd /home/ubuntu/unit-testing-fizzbuzz && docker-compose up -d --build" 